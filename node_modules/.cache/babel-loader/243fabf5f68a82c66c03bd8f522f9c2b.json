{"ast":null,"code":"var _jsxFileName = \"/Users/gerardocedeno/Development/React/pkmn-project/src/context.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { pkmns } from './pkmns';\nimport paginate from './utils';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(29);\n  const fetchPokemons = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      setData(paginate(pkmns));\n      setLoading(false);\n    } catch (error) {\n      console.error('An error occurred while getting Pokemon list. Error: ', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchPokemons();\n  }, [fetchPokemons]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      data,\n      page,\n      setPage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/gerardocedeno/Development/React/pkmn-project/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","pkmns","paginate","AppContext","createContext","AppProvider","children","loading","setLoading","data","setData","page","setPage","fetchPokemons","error","console","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,MAAMC,UAAU,GAAGP,KAAK,CAACQ,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMgB,aAAa,GAAGb,WAAW,CAAC,YAAY;AAC5CQ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACFE,MAAAA,OAAO,CAACR,QAAQ,CAACD,KAAD,CAAT,CAAP;AACAO,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,CAGE,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CACE,uDADF,EAEEA,KAFF;AAID;AACF,GAZgC,EAY9B,EAZ8B,CAAjC;AAcAf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEN,MAAAA,OAAF;AAAWE,MAAAA,IAAX;AAAiBE,MAAAA,IAAjB;AAAuBC,MAAAA;AAAvB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,CADF;AAKD,CA5BD,C,CA6BA;;;AACA,OAAO,MAAMU,gBAAgB,GAAG,MAAM;AACpC,SAAOlB,UAAU,CAACK,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\nimport { pkmns } from './pkmns'\nimport paginate from './utils'\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n  const [page, setPage] = useState(29)\n\n  const fetchPokemons = useCallback(async () => {\n    setLoading(true)\n\n    try {\n      setData(paginate(pkmns))\n      setLoading(false)\n    } catch (error) {\n      console.error(\n        'An error occurred while getting Pokemon list. Error: ',\n        error\n      )\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchPokemons()\n  }, [fetchPokemons])\n\n  return (\n    <AppContext.Provider value={{ loading, data, page, setPage }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"]},"metadata":{},"sourceType":"module"}